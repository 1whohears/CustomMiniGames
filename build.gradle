plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '0.0.3'
group = 'com.1whohears.minigames'
archivesBaseName = 'minigames-1.19.2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'minigames'
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'minigames'
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'minigames'
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'minigames', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Custom Mini Games",
                "Specification-Vendor"    : "1whohears",
                "Specification-Version"   : version, 
                "Implementation-Title"    : "Custom Mini Games",
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "1whohears",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
        	groupId = group
            artifactId = archivesBaseName
            version = version
            artifact jar
        }
    }
    Properties props = new Properties() 
	props.load(new FileInputStream("$projectDir/local.properties")) 
    repositories {
        maven {
            credentials {
    			username props.repsyMavenUsername
    			password props.repsyMavenPassword
  			}
  			url "https://repo.repsy.io/mvn/1whohears/minigames"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
