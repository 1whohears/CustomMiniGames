buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

version = '0.1.12'
group = "com.1whohears.${mod_id}"
archivesBaseName = "${mod_id}-${minecraft_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'minigames'
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }

        client2 {
            parent runs.client
            taskName 'runClient2'
            arg '--username=StupidIdiot'
        }

        client3 {
            parent runs.client
            taskName 'runClient3'
            arg '--username=LunaticDonkey'
        }

        client4 {
            parent runs.client
            taskName 'runClient4'
            arg '--username=ShitAss'
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'minigames'
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'minigames'
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'minigames', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                minigames {
                    source sourceSets.main
                }
            }
        }
    }
}

/*mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}*/

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://repo.repsy.io/mvn/1whohears/1wholibs" }
    maven { url "https://cursemaven.com" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    // https://github.com/1whohears/1wholibs
    implementation fg.deobf("com.onewhohears.onewholibs:onewholibs-${minecraft_version}:${onewholibs_version}")
    implementation fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-${xaeros_minimap_fair_play_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Custom Mini Games",
                "Specification-Vendor"    : "1whohears",
                "Specification-Version"   : version, 
                "Implementation-Title"    : "Custom Mini Games",
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "1whohears",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
        	groupId = group
            artifactId = archivesBaseName
            version = version
            artifact jar
        }
    }
    Properties props = new Properties() 
	props.load(new FileInputStream("$projectDir/local.properties")) 
    repositories {
        maven {
            credentials {
    			username props.repsyMavenUsername
    			password props.repsyMavenPassword
  			}
  			url "https://repo.repsy.io/mvn/1whohears/minigames"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
